#Load the edgeR library
library("edgeR")
#Import gene count data
countsTable <- read.csv("/home/mae/Documents/RNASeq_Workshop_ND/daphnia_genesCounted.csv", row.names="gene")[ ,1:6]
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Write normalized counts to file
normList <- cpm(list, normalized.lib.sizes=TRUE)
write.table(normList, file="normalizedCounts.csv", sep=",", row.names=TRUE)
#Produce a matrix of pseudo-counts
#Estimate common dispersion and tagwise dispersions
list <- estimateDisp(list)
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
topTags(tested)
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
#Output resulting table
write.table(resultsTbl, file="exactTestResults.csv", sep=",", row.names=TRUE)
#Load the edgeR library
library("edgeR")
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,1:6]
head(countsTable)
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#Plot the library sizes before normalization
jpeg("plotBarsBefore.jpg")
barplot(list$samples$lib.size*1e-6, names=1:6, ylab="Library size (millions)")
dev.off()
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
topTags(tested)
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
#Output resulting table
write.table(resultsTbl, file="stats_exactTest.csv", sep=",", row.names=TRUE)
#Load the edgeR library
library("edgeR")
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,1:6]
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Produce a matrix of pseudo-counts
#Estimate common dispersion and tagwise dispersions
list <- estimateDisp(list)
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
resultsTbl
nrow(resultsTbl)
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,7:13]
head(countsTable)
#Load the edgeR library
library("edgeR")
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,7:12]
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Produce a matrix of pseudo-counts
#Estimate common dispersion and tagwise dispersions
list <- estimateDisp(list)
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
nrow(resultsTbl)
#Load the edgeR library
library("edgeR")
#Set index range for selected genotype
start=1
end=6
outputName=paste(start,end,"exactTest.csv",sep="_")
outputName
#Import gene count data
countsTable <- read.csv(file=args[1], row.names="gene")[ ,start:end]
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,start:end]
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Produce a matrix of pseudo-counts
#Estimate common dispersion and tagwise dispersions
list <- estimateDisp(list)
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
#Write test results to csv file
write.table(resultsTbl, file=outputName, sep=",", row.names=TRUE)
#!/usr/bin/env Rscript
#Usage: Rscript exactTest_edgeR.r countsFile.csv startColumn endColumn
#Usage Ex: Rscript exactTest_edgeR.r daphnia_genesCounted.csv 1 6
#R script to perform statistical analysis of gene count tables using edgeR exact test
#Install edgeR, this should only need to be done once
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#BiocManager::install("edgeR")
#Load the edgeR library
library("edgeR")
#Set index range for selected genotype
start=7
end=12
outputName=paste(start,end,"exactTest.csv",sep="_")
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,start:end]
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Produce a matrix of pseudo-counts
#Estimate common dispersion and tagwise dispersions
list <- estimateDisp(list)
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
#Write test results to csv file
write.table(resultsTbl, file=outputName, sep=",", row.names=TRUE)
#!/usr/bin/env Rscript
#Usage: Rscript exactTest_edgeR.r countsFile.csv startColumn endColumn
#Usage Ex: Rscript exactTest_edgeR.r daphnia_genesCounted.csv 1 6
#R script to perform statistical analysis of gene count tables using edgeR exact test
#Install edgeR, this should only need to be done once
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#BiocManager::install("edgeR")
#Load the edgeR library
library("edgeR")
#Set index range for selected genotype
start=13
end=18
outputName=paste(start,end,"exactTest.csv",sep="_")
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,start:end]
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Produce a matrix of pseudo-counts
#Estimate common dispersion and tagwise dispersions
list <- estimateDisp(list)
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
#Write test results to csv file
write.table(resultsTbl, file=outputName, sep=",", row.names=TRUE)
head(countsTable)
#!/usr/bin/env Rscript
#Usage: Rscript exactTest_edgeR.r countsFile.csv startColumn endColumn
#Usage Ex: Rscript exactTest_edgeR.r daphnia_genesCounted.csv 1 6
#R script to perform statistical analysis of gene count tables using edgeR exact test
#Install edgeR, this should only need to be done once
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#BiocManager::install("edgeR")
#Load the edgeR library
library("edgeR")
#Set index range for selected genotype
start=18
end=24
outputName=paste(start,end,"exactTest.csv",sep="_")
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,start:end]
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Produce a matrix of pseudo-counts
#Estimate common dispersion and tagwise dispersions
list <- estimateDisp(list)
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
#Write test results to csv file
write.table(resultsTbl, file=outputName, sep=",", row.names=TRUE)
#!/usr/bin/env Rscript
#Usage: Rscript exactTest_edgeR.r countsFile.csv startColumn endColumn
#Usage Ex: Rscript exactTest_edgeR.r daphnia_genesCounted.csv 1 6
#R script to perform statistical analysis of gene count tables using edgeR exact test
#Install edgeR, this should only need to be done once
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#BiocManager::install("edgeR")
#Load the edgeR library
library("edgeR")
#Set index range for selected genotype
start=19
end=24
outputName=paste(start,end,"exactTest.csv",sep="_")
#Import gene count data
countsTable <- read.csv(file="/home/mae/Documents/RNASeq_Workshop_ND/daphniaRawCounts_onlyEntrez_noDups.csv", row.names="gene")[ ,start:end]
#Add grouping factor
group <- factor(c(rep("ctrl",3),rep("treat",3)))
#Create DGE list object
list <- DGEList(counts=countsTable,group=group)
#There is no purpose in analysing genes that are not expressed in either
# experimental condition, so genes are first filtered on expression levels
keep <- filterByExpr(list)
list <- list[keep, , keep.lib.sizes=FALSE]
#Calculate normalized factors
list <- calcNormFactors(list)
#Produce a matrix of pseudo-counts
#Estimate common dispersion and tagwise dispersions
list <- estimateDisp(list)
#Perform an exact test for treat vs ctrl
tested <- exactTest(list, pair=c("ctrl", "treat"))
#Create results table of DE genes
resultsTbl <- topTags(tested, n=nrow(tested$table))$table
#Write test results to csv file
write.table(resultsTbl, file=outputName, sep=",", row.names=TRUE)
